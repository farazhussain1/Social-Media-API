// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  password          String
  username          String
  friendReqSent     Friends[] @relation("RequestSender")
  friendReqReceived Friends[] @relation("RequestRecipient")

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt()
  Post      Post[]
  Likes     Likes[]
  Comments  Comments[]
}

enum FriendshipStatus {
  Requested
  Connected
}

model Friends {
  id           Int              @id @default(autoincrement())
  user1        Int
  user2        Int
  friendStatus FriendshipStatus @default(Requested)
  sender       User             @relation("RequestSender", fields: [user1], references: [id], onDelete: Cascade)
  recipient    User             @relation("RequestRecipient", fields: [user2], references: [id], onDelete: Cascade)
}

model Post {
  id          Int        @id @default(autoincrement())
  userId      Int
  title       String
  description String
  user        User       @relation(fields: [userId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt()
  Comments    Comments[]
  Likes       Likes[]
}

model Likes {
  id        Int      @id @default(autoincrement())
  userId    Int
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Comments {
  id        Int      @id @default(autoincrement())
  userId    Int
  postId    Int
  comment   String
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}
